---
- name: Deploy Open Doors temporary site for root site
  hosts: all
  remote_user: "{{ remote_user }}"
  become: yes

  vars:
    sitekey: rootsite
    repo: https://github.com/otwcode/open-doors-landing-site.git
    deploy_path: "{{ remote_path }}/{{ sitekey }}"
    unicorn_script: unicorn_{{ sitekey }}

  tasks:
  - name: Create Bundler directory
    file:
      path: "{{ remote_path }}/bundle/{{ sitekey }}"
      owner: "{{ remote_user }}"
      group: "{{ remote_group }}"
      state: directory

  - name: Stop app if already running
    service:
      name: "{{ unicorn_script }}"
      state: stopped
    ignore_errors: yes

  - name: Delete app directory if it exists to start with a clean copy
    file:
      path: "{{ deploy_path }}"
      state: absent

  - name: Create directory on Open Doors site
    file:
      path: "{{ deploy_path }}"
      owner: "{{ remote_user }}"
      group: "{{ remote_group }}"
      state: directory

  - name: Clone code from Github
    git:
      repo: "{{ repo }}"
      dest: "{{ deploy_path }}"
      depth: 1 # Don't retrieve history
      accept_hostkey: yes
      update: yes
      version: "{{ repo_version }}"

  - name: Remove .git directory so the repo can't be inadvertently updated
    file:
      path: "{{ deploy_path }}/.git"
      state: absent

  # Install
  - name: Update bundle
    command: bundle update
    args:
      chdir: "{{ deploy_path }}"

  - name: Install bundle
    command: bundle install --deployment --path={{ remote_path }}/bundle/{{ sitekey }}
    args:
      chdir: "{{ deploy_path }}"

  # Create folders
  - name: Create log, pid and socket folders for Unicorn
    file:
      dest: "{{ deploy_path }}/{{ item }}"
      owner: "{{ remote_user }}"
      group: "{{ remote_group }}"
      state: directory
    with_items:
      - log
      - runtime/sockets
      - runtime/pids

  - name: Create Unicorn script
    template:
      src: "{{ playbook_dir }}/etc/init.d/unicorn_app.j2"
      dest: "/etc/init.d/unicorn_{{ sitekey }}"
      mode: 0755

  - name: Register service
    command: update-rc.d unicorn_{{ sitekey }} defaults
    ignore_errors: yes

  - name: Start Unicorn app
    service:
      name: unicorn_{{ sitekey }}
      state: started
      enabled: yes

  - name: Restart Nginx
    service:
      name: nginx
      state: restarted
      enabled: yes
